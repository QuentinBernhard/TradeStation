Inputs : 	P1((4*C+H+L)/6),	L1(5),	stdDevLength(50),	stdDevFactor(1),	Length(125), 	StochLength( 21 ), 	SmoothingLength1( 21 ), 	SmoothingLength2( 5 ), 	SmoothingType( 2 ),	stoploss(25000);	vars : 		ma(0),		maa1(0),	maa2(0),	maa(0),	Li(0),		Le(0),	upperEnvelopeLine(0),	lowerEnvelopeLine(0),	upperEnvelopeLine1(0),	lowerEnvelopeLine1(0),	bullPower(0),	bearPower(0),	maxPower(0),	percentPenetration(0),	stdDevToUse(0),	count(0),	N(0),	N1(0),	N2(0),	N3(0),	M(0),	M1(0),	M2(0),	M3(0),	HH(0),	LL(0),	Dimen(0),	alpha(0),	FiltLi(0),	FiltLe(0),	dernier_indice(0),	state("bearish"),	xAv(0),  	strat(1), 	ind(0), 	j(0),	short_prise(False), 	long_prise(False),	nbreshares(0),	oFastK( 0 ), 	oFastD( 0 ), 	oSlowK( 0 ), 	oSlowD( 0 ),	stoc(0);/////////////////////////////////////////////////////////////////		//CALCUL DES ENVELOPPES POUR LE STOPLOSS ET PRISE DE POSITION		/////////////////////////////////////////////////////////////////Le = L1;Li=2;N=Li;M=Le;N3 = (Highest(High, N) - Lowest(Low, N)) / N;HH = High;LL = Low;For count = 0 to N / 2 - 1 begin	If High[count] > HH then HH = High[count];	If Low[count] < LL then LL = Low[count];End;N1 = (HH - LL) / (N / 2);HH = High[N / 2];LL = Low[N / 2];For count = N/2 to N - 1 begin	If High[count] > HH then HH = High[count];	If Low[count] < LL then LL = Low[count];End;N2 = (HH - LL) / (N / 2);If N1 > 0 and  N2 > 0 and N3 > 0 then Dimen = (Log(N1 + N2) - Log(N3)) / Log(2);alpha = ExpValue(-4.6*(Dimen - 1));If alpha < .01 then alpha = .01;If alpha > 1 then alpha = 1;FiltLi = alpha*P1  + (1 - alpha)*FiltLi[1];If CurrentBar < N + 1 then FiltLi = P1 ;M3 = (Highest(High, M) - Lowest(Low, M)) / M;For count = 0 to M / 2 - 1 begin	If High[count] > HH then HH = High[count];	If Low[count] < LL then LL = Low[count];End;M1 = (HH - LL) / (M / 2);HH = High[M / 2];LL = Low[M / 2];For count = M/2 to M - 1 begin	If High[count] > HH then HH = High[count];	If Low[count] < LL then LL = Low[count];End;N2 = (HH - LL) / (M / 2);If M1 > 0 and  M2 > 0 and M3 > 0 then Dimen = (Log(M1 + M2) - Log(M3)) / Log(2);alpha = ExpValue(-4.6*(Dimen - 1));If alpha < .01 then alpha = .01;If alpha > 1 then alpha = 1;FiltLe = alpha*P1  + (1 - alpha)*FiltLe[1];If CurrentBar < M + 1 then FiltLe = P1 ;maa1 = (AdaptiveMovAvg( P1 ,Li, Li, Li)+ 2*filtLi)/3;maa2 = (AdaptiveMovAvg( P1 ,Le, Le, Le)+ 2*filtLe)/3;ma = AdaptiveMovAvg((maa1+maa2)/2,Le,Le,Le);bullPower = absValue(high-ma);bearPower = absValue(low-ma);maxPower = maxList(bullPower, bearPower);percentPenetration = maxPower / ma;stdDevToUse = xaverage(stdDevS(percentPenetration, stdDevLength),stdDevLength);upperEnvelopeLine = xaverage(ma* (1+(stdDevFactor*stdDevToUse)),Le);lowerEnvelopeLine = xaverage(ma* (1-(stdDevFactor*stdDevToUse)),Le);upperEnvelopeLine1 = xaverage(ma* (1+(stdDevFactor/4*stdDevToUse)),Le);lowerEnvelopeLine1 = xaverage(ma* (1-(stdDevFactor/4*stdDevToUse)),Le);///////////////////////////////////////////////////////////////////calcul de l'état du marché (blanc au dessus de rouge ou inversement)/////////////////////////////////////////////////////////////////dernier_indice = 0;if  P1<=lowerEnvelopeLine then  	state = "bearish";if  P1>upperEnvelopeLine then	state = "bullish";if P1>lowerEnvelopeLine and P1<=upperEnvelopeLine then Begin	while P1[dernier_indice] > lowerEnvelopeLine[dernier_indice] and P1[dernier_indice] <= upperEnvelopeLine[dernier_indice] and dernier_indice < 20 Begin		dernier_indice  = dernier_indice + 1;		if P1[dernier_indice] <= lowerEnvelopeLine[dernier_indice] Then			state = "bearish";			lowerEnvelopeLine1 = lowerEnvelopeLine1[dernier_indice];		if P1[dernier_indice] > upperEnvelopeLine[dernier_indice] Then			state = "bullish";			upperEnvelopeLine1 = upperEnvelopeLine1[dernier_indice];	end;end;///////////////////////////////////////////////////////////////////Ajout de la condition de prise ou pas détaillée dans l'excel/////////////////////////////////////////////////////////////////stoc = Stochastic(High, Low, Close, StochLength, SmoothingLength1, SmoothingLength2, SmoothingType, oFastK, oFastD, oSlowK, oSlowD);xAv = xaverage ((Highest (High,Length)+Lowest (Low, Length))/2,(Length));if state = "bullish" then Begin	ind = 1;	long_prise = False;	while Close[ind] > xAv[ind] and ind < 800 Begin		ind = ind + 1;		if dernier_indice[ind] > 0 Then			long_prise = True;			break;	end;end;if state = "bearish" then Begin	ind = 1;	short_prise = False;	while Close[ind] < xAv[ind] Begin		ind = ind + 1;		if dernier_indice[ind] > 0 Then			short_prise = True;			break;	end;end;///////////////////////////////////////////////////////////////////LONG/////////////////////////////////////////////////////////////////if state = "bullish" and oSlowK >= oSlowD and long_prise = true and Close > xAv and close > upperEnvelopeLine Then Begin	if Marketposition = -1 Then		buytocover ("pour long") this bar on close;	if Marketposition = 0 Then		buy (stoploss/((Close - lowerEnvelopeLine1[dernier_indice])*Bigpointvalue)) Shares this bar on close;		//buy 0 Shares this bar on close;end; sell ("stop long 2") next bar at lowerEnvelopeLine1 Stop;/////////////////////////////////////////////////////////////////	//SHORT/////////////////////////////////////////////////////////////////	if state = "bearish" and oslowK <= oslowD and short_prise = True and Close < xAv and Close < lowerEnvelopeLine Then Begin	if Marketposition = 1 Then		sell ("pour short") this bar on close;	if Marketposition = 0 Then Begin		sellshort ((stoploss/((upperEnvelopeLine1[dernier_indice] - Close)*Bigpointvalue))) Shares this bar on close;	end;end;Buytocover ("stop short 2") next bar at upperEnvelopeLine1 Stop; 